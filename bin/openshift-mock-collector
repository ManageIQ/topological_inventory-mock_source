#!/usr/bin/env ruby
lib = File.expand_path("../../lib", __FILE__)
$LOAD_PATH.unshift(lib) unless $LOAD_PATH.include?(lib)

STDOUT.sync = true

require "bundler/setup"
require "topological_inventory/mock_source/openshift/collector"

#
# You can add local requires to /lib/topological_inventory/mock_source/require.dev.rb
#
require_dev_path = File.join(lib, "require.dev.rb")
require require_dev_path if File.exist?(require_dev_path)

#
# Input args
# --source      (ENV["SOURCE_UID"])  - core: Source.uid (manager for this collector)
# --ingress_api (ENV["INGRESS_API"]) - swagger api server, by default *localhost:9292*
# --config      (ENV["CONFIG"])      - file located in /config
# --amounts     (ENV["AMOUNTS"])     - file located in /config/openshift
def parse_args
  require 'optimist'
  opts = Optimist.options do
    opt :source, "Inventory Source UID", :type => :string, :required => ENV["SOURCE_UID"].nil?, :default => ENV["SOURCE_UID"]
    opt :ingress_api, "Hostname of the ingress-api route", :type => :string, :default => ENV["INGRESS_API"] || "http://localhost:9292"
    opt :config, "Configuration file name", :type => :string, :default => ENV["CONFIG"] || "default"
    opt :amounts, "Amount of generated items", :type => :string, :default => ENV["AMOUNTS"] || "default"
  end

  opts
end

args = parse_args

ingress_api_uri = URI(args[:ingress_api])

TopologicalInventoryIngressApiClient.configure.scheme = ingress_api_uri.scheme || "http"
TopologicalInventoryIngressApiClient.configure.host   = "#{ingress_api_uri.host}:#{ingress_api_uri.port}"

collector = TopologicalInventory::MockSource::Openshift::Collector.new(args[:source], args[:config])
collector.collect!
